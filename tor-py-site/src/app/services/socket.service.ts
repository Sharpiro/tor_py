import { Injectable, Inject, InjectionToken } from '@angular/core';
import { Subject, Observable, of, ReplaySubject, from } from 'rxjs';
import { delay, concatMap, map } from 'rxjs/operators';
import { environment } from "../../environments/environment"

export const SOCKET_URL = new InjectionToken<string>('SocketUrl');

@Injectable({
  providedIn: 'root'
})
export class SocketService {
  private webSocketSubject: ReplaySubject<WebSocket>
  private messageSubject = new Subject<string>()

  constructor(@Inject(SOCKET_URL) private hostAndPort: string) { }

  private get webSocket(): Observable<WebSocket> {
    if (this.webSocketSubject) return this.webSocketSubject

    this.webSocketSubject = new ReplaySubject<WebSocket>()
    const protocol = environment.production ? "wss" : "ws"
    const webSocket = new WebSocket(`${protocol}://${this.hostAndPort}`)
    webSocket.onopen = _ => {
      webSocket.onmessage = event => this.messageSubject.next(event.data)
      this.webSocketSubject.next(webSocket)
    }
    return this.webSocketSubject
  }

  getMessages(): Observable<Message> {
    return this.messageSubject.pipe(
      map(json => JSON.parse(json)),
      concatMap(x => of(x).pipe(delay(500)))
    )
  }

  // tslint:disable
  // getMessages(): Observable<Message> {
  //   return from([
  //     { "title": "sendVersions", "data": { "cell": { "circuitId": 0, "command": "versions", "cellType": "VariableCell", "payloadLength": 2, "rawPayload": [0, 3] }, "payload": { "versions": [3] } } },
  //     { "title": "sendCreate2", "data": { "cell": { "circuitId": 60000, "command": "create2", "cellType": "cell", "payloadLength": 88, "rawPayload": [0, 2, 0, 84, 151, 21, 200, 27, 168, 197, 176, 198, 152, 136, 32, 53, 247, 92, 103, 214, 214, 67, 219, 227, 35, 76, 108, 216, 197, 65, 230, 220, 63, 20, 119, 20, 198, 194, 210, 245, 216, 247, 69, 31, 200, 42, 109, 165, 8, 40, 105, 63, 15, 253, 67, 82, 240, 255, 42, 152, 197, 238, 117, 41, 94, 101, 61, 41, 163, 249, 130, 164, 153, 239, 115, 161, 251, 154, 72, 190, 125, 49, 21, 35, 196, 67, 20, 102] }, "handshakeData": { "handshakeType": 2, "ephMyPrivateKey": [206, 232, 11, 9, 6, 76, 186, 180, 99, 229, 238, 242, 58, 163, 71, 51, 233, 15, 176, 94, 171, 60, 217, 186, 21, 105, 214, 24, 240, 138, 240, 165], "ephMyPublicKey": [240, 255, 42, 152, 197, 238, 117, 41, 94, 101, 61, 41, 163, 249, 130, 164, 153, 239, 115, 161, 251, 154, 72, 190, 125, 49, 21, 35, 196, 67, 20, 102], "serverIdentityDigest": [151, 21, 200, 27, 168, 197, 176, 198, 152, 136, 32, 53, 247, 92, 103, 214, 214, 67, 219, 227], "onionKey": [35, 76, 108, 216, 197, 65, 230, 220, 63, 20, 119, 20, 198, 194, 210, 245, 216, 247, 69, 31, 200, 42, 109, 165, 8, 40, 105, 63, 15, 253, 67, 82] } } },
  //     { "title": "recvCreated2", "data": { "cell": { "circuitId": 60000, "command": "created2", "cellType": "cell", "payloadLength": 509, "rawPayload": [0, 64, 228, 37, 167, 174, 115, 5, 230, 139, 56, 29, 175, 43, 61, 255, 158, 43, 238, 30, 135, 18, 153, 248, 72, 25, 4, 87, 251, 94, 100, 68, 162, 57, 4, 233, 122, 105, 165, 175, 238, 21, 166, 14, 236, 10, 253, 10, 141, 75, 21, 119, 217, 91, 215, 183, 13, 111, 120, 255, 241, 193, 36, 197, 141, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, "payload": { "ephServerPublicKey": [228, 37, 167, 174, 115, 5, 230, 139, 56, 29, 175, 43, 61, 255, 158, 43, 238, 30, 135, 18, 153, 248, 72, 25, 4, 87, 251, 94, 100, 68, 162, 57], "serverAuth": [4, 233, 122, 105, 165, 175, 238, 21, 166, 14, 236, 10, 253, 10, 141, 75, 21, 119, 217, 91, 215, 183, 13, 111, 120, 255, 241, 193, 36, 197, 141, 146] } } },
  //     { "title": "sendExtend2", "data": { "cell": { "circuitId": 60000, "command": "relay_early", "cellType": "cell", "payloadLength": 509, "rawPayload": [200, 244, 220, 34, 186, 56, 156, 155, 165, 90, 28, 99, 197, 177, 130, 137, 182, 122, 169, 187, 50, 142, 46, 137, 132, 211, 20, 48, 87, 204, 27, 176, 154, 84, 76, 137, 197, 62, 52, 205, 206, 105, 17, 245, 249, 204, 83, 166, 192, 218, 65, 216, 24, 78, 226, 0, 13, 133, 0, 30, 24, 100, 50, 193, 194, 159, 8, 87, 219, 239, 226, 176, 202, 137, 58, 67, 219, 144, 225, 112, 75, 23, 161, 243, 190, 245, 81, 106, 91, 199, 65, 6, 117, 37, 141, 243, 142, 246, 197, 191, 120, 154, 244, 211, 179, 245, 78, 94, 39, 124, 130, 251, 243, 100, 114, 25, 34, 191, 157, 114, 239, 178, 243, 229, 228, 141, 20, 246, 80, 8, 64, 2, 150, 157, 229, 41, 160, 67, 230, 58, 149, 61, 2, 220, 226, 207, 213, 33, 10, 173, 93, 114, 43, 128, 160, 163, 108, 27, 229, 249, 199, 193, 199, 172, 112, 52, 117, 202, 78, 21, 45, 212, 151, 162, 55, 227, 104, 156, 43, 212, 77, 251, 122, 226, 196, 212, 22, 211, 44, 223, 105, 49, 69, 176, 195, 112, 129, 133, 238, 185, 22, 62, 212, 244, 177, 132, 15, 163, 153, 25, 233, 146, 71, 3, 120, 5, 33, 9, 62, 228, 31, 83, 193, 19, 176, 150, 74, 204, 170, 57, 70, 17, 41, 224, 192, 249, 99, 47, 16, 195, 117, 204, 191, 28, 87, 213, 155, 43, 159, 126, 27, 194, 76, 208, 197, 62, 206, 11, 146, 181, 73, 164, 194, 95, 4, 184, 24, 99, 195, 112, 127, 36, 180, 253, 164, 229, 226, 116, 5, 104, 186, 200, 234, 20, 51, 126, 210, 160, 10, 43, 138, 122, 44, 106, 183, 159, 239, 183, 100, 175, 203, 24, 180, 42, 230, 250, 191, 51, 164, 207, 5, 2, 157, 181, 101, 56, 35, 107, 99, 210, 176, 96, 11, 133, 90, 71, 237, 177, 133, 106, 167, 50, 80, 74, 41, 208, 141, 116, 6, 60, 181, 143, 32, 99, 33, 244, 246, 9, 138, 235, 11, 180, 49, 86, 8, 220, 248, 151, 150, 22, 62, 68, 52, 8, 66, 105, 112, 46, 84, 1, 85, 167, 53, 149, 180, 173, 115, 36, 36, 134, 30, 135, 80, 199, 130, 86, 172, 36, 191, 40, 186, 112, 123, 102, 128, 209, 193, 204, 97, 99, 177, 38, 175, 30, 153, 190, 128, 47, 100, 163, 122, 2, 127, 181, 164, 175, 196, 188, 21, 221, 163, 191, 185, 100, 150, 44, 93, 206, 78, 92, 81, 155, 16, 43, 251, 240, 117, 117, 139, 229, 50, 17, 255, 233, 148, 136, 147, 36, 39, 42, 107, 132, 180, 68, 154, 210, 162, 247, 112, 161, 169, 5, 182, 194, 224, 23, 228, 112, 220, 24, 78, 14, 66, 151, 8, 222, 52, 218, 178, 101, 203, 177, 69, 116, 86, 54, 88, 238, 162, 94, 173, 90, 100, 213, 225, 59, 115, 227, 90, 143, 49, 60, 190, 113, 200, 122, 213, 60, 127] }, "handshakeData": { "handshakeType": 2, "ephMyPrivateKey": [234, 21, 159, 189, 153, 152, 173, 83, 50, 158, 39, 191, 156, 97, 246, 52, 130, 194, 231, 229, 231, 93, 61, 166, 16, 119, 152, 191, 69, 104, 198, 10], "ephMyPublicKey": [150, 124, 1, 189, 169, 234, 194, 86, 148, 70, 195, 52, 138, 36, 209, 46, 157, 26, 217, 24, 51, 69, 200, 43, 147, 226, 252, 116, 135, 162, 63, 84], "serverIdentityDigest": [60, 89, 21, 52, 141, 115, 21, 5, 196, 129, 18, 244, 240, 50, 53, 253, 231, 184, 200, 55], "onionKey": [240, 123, 87, 117, 22, 63, 115, 240, 207, 43, 49, 109, 153, 203, 72, 33, 214, 123, 121, 178, 165, 74, 157, 104, 169, 91, 200, 60, 161, 112, 65, 27] } } },
  //     { "title": "recvExtended2", "data": { "cell": { "circuitId": 60000, "command": "relay", "cellType": "cell", "payloadLength": 509, "rawPayload": [15, 0, 0, 0, 0, 28, 218, 140, 189, 0, 66, 0, 64, 10, 134, 114, 34, 54, 224, 233, 71, 74, 205, 169, 89, 179, 210, 44, 171, 136, 37, 163, 48, 230, 39, 46, 46, 29, 144, 173, 130, 80, 196, 18, 10, 177, 104, 185, 178, 111, 141, 203, 153, 90, 54, 118, 26, 112, 20, 147, 133, 119, 118, 122, 185, 17, 142, 122, 247, 52, 167, 58, 41, 151, 187, 188, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, "payload": { "ephServerPublicKey": [10, 134, 114, 34, 54, 224, 233, 71, 74, 205, 169, 89, 179, 210, 44, 171, 136, 37, 163, 48, 230, 39, 46, 46, 29, 144, 173, 130, 80, 196, 18, 10], "serverAuth": [177, 104, 185, 178, 111, 141, 203, 153, 90, 54, 118, 26, 112, 20, 147, 133, 119, 118, 122, 185, 17, 142, 122, 247, 52, 167, 58, 41, 151, 187, 188, 50] } } },
  //     { "title": "sendRelayResolve", "data": { "cell": { "circuitId": 60000, "command": "relay", "cellType": "cell", "payloadLength": 509, "rawPayload": [23, 125, 16, 205, 27, 165, 152, 180, 98, 153, 89, 182, 190, 184, 43, 111, 93, 6, 122, 85, 228, 197, 5, 225, 241, 101, 170, 5, 81, 160, 89, 216, 116, 134, 193, 167, 199, 154, 170, 240, 23, 7, 228, 10, 120, 170, 233, 217, 97, 186, 95, 151, 85, 168, 217, 63, 201, 48, 110, 210, 245, 171, 201, 194, 228, 36, 12, 85, 237, 207, 72, 147, 20, 120, 79, 151, 110, 118, 254, 224, 241, 54, 68, 27, 70, 226, 92, 50, 89, 161, 153, 131, 203, 19, 166, 195, 76, 76, 113, 188, 63, 134, 225, 9, 139, 245, 229, 176, 176, 223, 33, 199, 202, 214, 28, 181, 241, 78, 71, 244, 192, 110, 36, 22, 109, 84, 199, 148, 65, 52, 21, 239, 61, 27, 55, 140, 195, 214, 37, 117, 7, 83, 247, 245, 54, 143, 34, 46, 110, 194, 245, 62, 168, 201, 19, 160, 0, 246, 37, 144, 0, 223, 83, 194, 212, 133, 140, 240, 68, 123, 208, 56, 76, 217, 126, 190, 252, 225, 220, 110, 38, 26, 223, 75, 7, 82, 57, 249, 20, 155, 70, 133, 246, 242, 15, 4, 228, 148, 202, 75, 250, 28, 187, 69, 226, 211, 9, 223, 35, 5, 139, 195, 190, 13, 236, 30, 246, 6, 105, 70, 111, 166, 201, 246, 85, 110, 7, 107, 38, 196, 205, 159, 230, 205, 157, 129, 174, 206, 27, 157, 218, 130, 31, 157, 11, 215, 136, 52, 174, 203, 138, 48, 148, 156, 110, 97, 116, 168, 161, 183, 144, 58, 125, 200, 149, 6, 192, 48, 177, 67, 108, 217, 160, 56, 10, 214, 41, 189, 78, 204, 82, 235, 124, 201, 74, 126, 108, 97, 220, 46, 43, 21, 17, 41, 67, 244, 94, 9, 223, 237, 249, 39, 135, 115, 198, 111, 151, 189, 97, 167, 6, 97, 34, 59, 236, 96, 74, 25, 72, 243, 199, 136, 105, 141, 237, 27, 68, 20, 249, 221, 2, 171, 96, 119, 168, 29, 107, 8, 194, 38, 89, 70, 78, 144, 137, 34, 216, 246, 228, 132, 197, 216, 69, 99, 235, 207, 11, 3, 50, 230, 136, 44, 136, 130, 97, 141, 57, 79, 223, 14, 67, 87, 254, 69, 35, 149, 248, 193, 3, 240, 124, 166, 249, 191, 52, 77, 235, 233, 253, 49, 99, 201, 108, 7, 20, 166, 80, 100, 196, 1, 26, 17, 170, 76, 196, 252, 248, 44, 90, 2, 84, 112, 69, 196, 60, 77, 119, 182, 23, 42, 195, 5, 141, 197, 233, 166, 46, 40, 189, 122, 208, 16, 228, 254, 57, 223, 0, 217, 210, 104, 245, 81, 235, 193, 103, 75, 123, 182, 186, 199, 125, 44, 167, 184, 134, 27, 152, 253, 130, 56, 202, 181, 197, 197, 156, 168, 177, 209, 188, 15, 230, 130, 30, 31, 186, 251, 249, 252, 52, 29, 191, 122, 138, 142, 198, 33, 39, 78, 114, 48, 66, 224, 184, 223, 18, 145, 1, 161, 21, 51, 131, 116, 16, 168, 137, 214, 206, 57, 2] }, "hostname": "torpy.blob.core.windows.net" } },
  //     { "title": "sendRelayBegin", "data": { "cell": { "circuitId": 60000, "command": "relay", "cellType": "cell", "payloadLength": 509, "rawPayload": [216, 157, 56, 96, 141, 140, 253, 230, 250, 192, 107, 166, 1, 88, 143, 195, 204, 84, 119, 28, 108, 81, 13, 131, 206, 182, 111, 195, 20, 165, 254, 61, 43, 119, 96, 216, 7, 109, 232, 48, 190, 29, 253, 170, 77, 164, 178, 12, 30, 245, 58, 19, 243, 133, 30, 155, 125, 88, 254, 104, 163, 105, 181, 102, 28, 213, 94, 93, 242, 56, 13, 224, 138, 153, 165, 247, 116, 194, 154, 238, 58, 162, 230, 206, 203, 216, 168, 165, 146, 158, 117, 237, 102, 2, 8, 124, 134, 67, 171, 20, 179, 63, 10, 80, 168, 200, 100, 115, 117, 95, 93, 132, 89, 69, 15, 180, 81, 183, 195, 136, 151, 48, 82, 44, 254, 121, 215, 247, 112, 186, 43, 175, 102, 74, 6, 178, 20, 173, 57, 220, 170, 155, 212, 222, 167, 35, 188, 42, 136, 112, 57, 243, 237, 201, 227, 15, 4, 224, 125, 84, 147, 20, 58, 191, 252, 19, 132, 225, 23, 137, 248, 85, 253, 5, 37, 96, 126, 34, 223, 116, 1, 71, 200, 55, 35, 32, 143, 183, 15, 139, 212, 11, 165, 232, 173, 41, 186, 205, 101, 64, 214, 208, 60, 80, 183, 248, 105, 234, 36, 29, 53, 135, 126, 97, 21, 154, 1, 130, 50, 173, 117, 119, 174, 241, 239, 246, 78, 118, 234, 5, 113, 228, 89, 90, 43, 73, 249, 50, 84, 63, 185, 107, 86, 205, 212, 218, 126, 225, 185, 219, 31, 246, 87, 8, 116, 247, 19, 230, 104, 81, 17, 193, 94, 161, 201, 92, 146, 32, 113, 252, 219, 215, 4, 200, 89, 244, 183, 213, 147, 185, 254, 179, 44, 244, 35, 22, 152, 236, 224, 219, 179, 6, 228, 96, 80, 83, 81, 134, 223, 14, 121, 65, 50, 217, 83, 76, 155, 31, 149, 183, 92, 206, 152, 23, 9, 86, 214, 218, 119, 61, 113, 193, 15, 60, 80, 112, 167, 19, 121, 242, 32, 255, 7, 30, 46, 203, 124, 231, 44, 232, 134, 173, 176, 110, 154, 205, 49, 190, 3, 164, 234, 41, 210, 229, 157, 140, 12, 32, 159, 171, 140, 197, 83, 253, 72, 250, 255, 193, 62, 97, 9, 159, 34, 29, 239, 118, 189, 25, 214, 215, 52, 241, 95, 159, 99, 62, 45, 201, 9, 196, 90, 125, 87, 33, 202, 109, 90, 194, 202, 32, 238, 38, 190, 59, 210, 83, 129, 234, 218, 34, 155, 246, 39, 3, 232, 0, 213, 186, 149, 196, 210, 231, 127, 84, 128, 0, 101, 181, 96, 90, 117, 46, 178, 59, 157, 135, 219, 166, 95, 143, 35, 0, 239, 183, 72, 37, 185, 241, 198, 6, 181, 150, 109, 224, 136, 184, 132, 202, 92, 11, 167, 91, 152, 185, 136, 177, 19, 71, 65, 122, 225, 242, 42, 144, 66, 121, 92, 114, 26, 86, 144, 4, 203, 94, 87, 134, 99, 215, 76, 53, 63, 186, 208, 207, 155, 65, 39, 252, 170, 165, 217, 40, 53, 118, 171, 207, 193, 72, 221] }, "addrPort": "52.239.152.74:80" } },
  //     { "title": "recvRelayConnected", "data": { "cell": { "circuitId": 60000, "command": "relay", "cellType": "cell", "payloadLength": 509, "rawPayload": [4, 0, 0, 97, 168, 250, 79, 74, 130, 0, 8, 52, 239, 152, 74, 0, 0, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, "payload": { "ipAddress": "52.239.152.74", "ttl": 3600 } } },
  //     { "title": "sendRelayData", "data": { "cell": { "circuitId": 60000, "command": "relay", "cellType": "cell", "payloadLength": 509, "rawPayload": [237, 222, 70, 56, 39, 115, 249, 39, 231, 36, 208, 216, 56, 4, 84, 55, 50, 38, 142, 119, 234, 179, 236, 94, 10, 114, 28, 234, 5, 236, 102, 144, 113, 149, 112, 183, 209, 209, 30, 236, 192, 219, 87, 34, 163, 85, 133, 167, 90, 233, 136, 162, 128, 216, 102, 50, 73, 201, 160, 210, 188, 149, 194, 18, 254, 229, 36, 213, 19, 234, 186, 59, 152, 241, 86, 68, 202, 81, 103, 31, 93, 52, 60, 56, 148, 238, 180, 119, 243, 196, 101, 224, 168, 204, 83, 162, 222, 148, 55, 154, 116, 185, 75, 230, 51, 108, 250, 194, 88, 193, 94, 7, 128, 119, 17, 148, 19, 90, 248, 158, 142, 51, 143, 44, 244, 138, 87, 60, 87, 171, 199, 177, 245, 29, 125, 28, 37, 230, 50, 243, 101, 101, 90, 213, 165, 44, 206, 192, 140, 213, 200, 159, 39, 58, 241, 172, 123, 109, 253, 117, 251, 210, 57, 101, 72, 43, 220, 147, 52, 77, 16, 112, 84, 236, 106, 12, 124, 182, 27, 110, 255, 127, 62, 33, 57, 2, 175, 129, 38, 10, 35, 158, 200, 37, 16, 143, 131, 233, 123, 109, 75, 170, 86, 200, 60, 248, 216, 124, 229, 155, 67, 13, 129, 2, 253, 137, 19, 212, 44, 19, 138, 154, 129, 234, 211, 56, 49, 36, 61, 158, 62, 187, 143, 1, 17, 242, 63, 174, 18, 106, 117, 192, 54, 117, 141, 86, 180, 216, 152, 48, 181, 64, 204, 42, 139, 218, 181, 128, 37, 161, 94, 46, 145, 207, 100, 42, 69, 39, 244, 238, 19, 168, 110, 35, 253, 36, 2, 228, 230, 168, 192, 201, 162, 51, 190, 195, 158, 165, 185, 180, 26, 78, 229, 151, 175, 225, 206, 148, 141, 47, 178, 173, 239, 247, 144, 115, 152, 140, 130, 253, 222, 148, 237, 192, 197, 101, 165, 59, 238, 180, 127, 135, 52, 73, 86, 141, 226, 42, 37, 175, 40, 91, 238, 30, 236, 226, 107, 130, 178, 14, 83, 220, 222, 7, 113, 75, 18, 85, 88, 18, 87, 157, 84, 100, 115, 29, 110, 236, 187, 244, 57, 112, 50, 167, 206, 179, 211, 158, 117, 75, 86, 4, 230, 154, 41, 28, 173, 140, 161, 84, 254, 216, 213, 86, 83, 172, 227, 170, 203, 230, 147, 254, 102, 217, 111, 141, 59, 79, 57, 34, 149, 85, 129, 61, 31, 41, 170, 67, 124, 231, 198, 28, 30, 225, 240, 238, 32, 163, 129, 92, 211, 123, 201, 20, 103, 126, 28, 116, 71, 225, 241, 42, 185, 196, 66, 114, 13, 122, 168, 133, 127, 62, 61, 47, 114, 149, 140, 134, 10, 100, 241, 95, 220, 110, 42, 236, 99, 163, 34, 115, 61, 249, 52, 27, 115, 123, 252, 108, 229, 71, 211, 92, 15, 150, 110, 34, 145, 189, 191, 183, 67, 226, 128, 157, 202, 20, 116, 57, 153, 41, 75, 90, 224, 165, 117, 79, 187, 52, 73, 157, 140, 123, 90, 122, 238, 0, 54, 127, 22] }, "payload": "GET /tor-blobs/tor.txt HTTP/1.1\r\nHost: torpy.blob.core.windows.net\r\nAccept: */*\r\n\r\n" } },
  //     { "title": "recvRelayData", "data": { "cell": { "circuitId": 60000, "command": "relay", "cellType": "cell", "payloadLength": 509, "rawPayload": [2, 0, 0, 97, 168, 146, 90, 136, 175, 1, 118, 72, 84, 84, 80, 47, 49, 46, 49, 32, 50, 48, 48, 32, 79, 75, 13, 10, 67, 111, 110, 116, 101, 110, 116, 45, 76, 101, 110, 103, 116, 104, 58, 32, 49, 48, 13, 10, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 32, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 13, 10, 76, 97, 115, 116, 45, 77, 111, 100, 105, 102, 105, 101, 100, 58, 32, 84, 104, 117, 44, 32, 48, 49, 32, 65, 117, 103, 32, 50, 48, 49, 57, 32, 50, 49, 58, 49, 51, 58, 53, 49, 32, 71, 77, 84, 13, 10, 69, 84, 97, 103, 58, 32, 48, 120, 56, 68, 55, 49, 54, 67, 53, 50, 54, 67, 67, 66, 49, 66, 69, 13, 10, 83, 101, 114, 118, 101, 114, 58, 32, 87, 105, 110, 100, 111, 119, 115, 45, 65, 122, 117, 114, 101, 45, 66, 108, 111, 98, 47, 49, 46, 48, 32, 77, 105, 99, 114, 111, 115, 111, 102, 116, 45, 72, 84, 84, 80, 65, 80, 73, 47, 50, 46, 48, 13, 10, 120, 45, 109, 115, 45, 114, 101, 113, 117, 101, 115, 116, 45, 105, 100, 58, 32, 54, 97, 52, 49, 57, 102, 99, 49, 45, 53, 48, 49, 101, 45, 48, 48, 54, 57, 45, 50, 51, 100, 55, 45, 53, 54, 102, 55, 56, 98, 48, 48, 48, 48, 48, 48, 13, 10, 120, 45, 109, 115, 45, 118, 101, 114, 115, 105, 111, 110, 58, 32, 50, 48, 48, 57, 45, 48, 57, 45, 49, 57, 13, 10, 120, 45, 109, 115, 45, 108, 101, 97, 115, 101, 45, 115, 116, 97, 116, 117, 115, 58, 32, 117, 110, 108, 111, 99, 107, 101, 100, 13, 10, 120, 45, 109, 115, 45, 98, 108, 111, 98, 45, 116, 121, 112, 101, 58, 32, 66, 108, 111, 99, 107, 66, 108, 111, 98, 13, 10, 68, 97, 116, 101, 58, 32, 77, 111, 110, 44, 32, 49, 57, 32, 65, 117, 103, 32, 50, 48, 49, 57, 32, 50, 49, 58, 52, 55, 58, 52, 52, 32, 71, 77, 84, 13, 10, 13, 10, 104, 101, 108, 108, 111, 32, 116, 111, 114, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, "payload": "HTTP/1.1 200 OK\r\nContent-Length: 10\r\nContent-Type: text/plain\r\nLast-Modified: Thu, 01 Aug 2019 21:13:51 GMT\r\nETag: 0x8D716C526CCB1BE\r\nServer: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0\r\nx-ms-request-id: 6a419fc1-501e-0069-23d7-56f78b000000\r\nx-ms-version: 2009-09-19\r\nx-ms-lease-status: unlocked\r\nx-ms-blob-type: BlockBlob\r\nDate: Mon, 19 Aug 2019 21:47:44 GMT\r\n\r\nhello tor\n" } }
  //   ]).pipe(
  //     concatMap(x => of(x).pipe(delay(500)))
  //   )
  // }
  // tslint:enable

  sendMessage(title: string, data: string) {
    this.webSocket.subscribe(webSocket => {
      const message = { title, data }
      webSocket.send(JSON.stringify(message))
    })
  }
}

export interface Message {
  title: string
  data: any
}
